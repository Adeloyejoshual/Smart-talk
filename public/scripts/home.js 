// public/scripts/home.js
document.addEventListener("DOMContentLoaded", () => {
  const usernameDisplay = document.getElementById("usernameDisplay");
  const searchBar = document.getElementById("searchBar");
  const userList = document.getElementById("userList");
  const addUserBtn = document.getElementById("addUserBtn");
  const addUserModal = document.getElementById("addUserModal");
  const closeModal = document.getElementById("closeModal");
  const createUserForm = document.getElementById("createUserForm");
  const settingsBtn = document.getElementById("settingsBtn");
  const darkToggle = document.getElementById("darkModeToggle");

  // Load current user
  const user = JSON.parse(localStorage.getItem("user"));
  if (!user) return (window.location.href = "/login.html");

  usernameDisplay.textContent = user.username;

  // Load users initially
  fetchUsers("");

  // Search listener
  searchBar.addEventListener("input", () => {
    fetchUsers(searchBar.value.trim());
  });

  // Fetch users
  function fetchUsers(search) {
    fetch(`/api/users?search=${search}&current=${user.username}`)
      .then(res => res.json())
      .then(data => {
        userList.innerHTML = "";
        if (data.length === 0) {
          userList.innerHTML = "<p>No users found</p>";
        } else {
          data.forEach(u => {
            const div = document.createElement("div");
            div.className = "user";
            div.textContent = u.username + " (" + u.email + ")";
            userList.appendChild(div);
          });
        }
      });
  }

  // Open Add User modal
  addUserBtn.addEventListener("click", () => {
    addUserModal.classList.remove("hidden");
  });

  // Close modal
  closeModal.addEventListener("click", () => {
    addUserModal.classList.add("hidden");
    createUserForm.reset();
  });

  // Handle form submission
  createUserForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(createUserForm);
    const newUser = {
      username: formData.get("username"),
      email: formData.get("email"),
      password: formData.get("password")
    };

    const res = await fetch("/api/auth/register", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(newUser)
    });

    const data = await res.json();

    if (res.ok) {
      alert("User added successfully!");
      addUserModal.classList.add("hidden");
      createUserForm.reset();
      fetchUsers(""); // Refresh user list
    } else {
      alert(data.message || "Error adding user.");
    }
  });

  // Dark mode toggle
  darkToggle.addEventListener("change", () => {
    document.documentElement.setAttribute(
      "data-theme",
      darkToggle.checked ? "dark" : "light"
    );
  });

  // Optional: auto-set toggle on load
  if (document.documentElement.getAttribute("data-theme") === "dark") {
    darkToggle.checked = true;
  }
});